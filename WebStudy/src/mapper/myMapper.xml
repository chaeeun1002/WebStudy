<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="loginmapper">
	<select id="selectIdAndPwd" resultType="model.Member" parameterType="String">
		select * from member where mem_id = #{mem_id}
	</select>
	<select id="selectMaxSeqno" resultType="Integer">
		select max(seqno) from bbs
	</select>
	<insert id="insertIntoBbs" parameterType="model.BBS">
		insert into bbs(seqno,title,content,id,bbs_date) values(#{seqno},#{title},#{content},#{id},#{bbs_date})
	</insert>
	<select id="selectBBS" resultType="model.BBS">
		select * from bbs order by seqno desc
	</select>
	<select id="selectBBSBySeqno" resultType="model.BBS" parameterType="Integer">
		select * from bbs where seqno = #{seqno}
	</select>
	<select id="selectMaxCode" resultType="Integer">
		select max(code) from item_info
	</select>
	<insert id="insertItemInfo" parameterType="model.ItemInfo">
		insert into item_info(code,name,price,origin,info) values(#{code},#{name},#{price},#{origin},#{info})
	</insert>
	<select id="selectItemInfo" resultType="model.ItemInfo">
		select * from item_info order by code desc
	</select>
	<select id="selectItemInfoByCode" resultType="model.ItemInfo" parameterType="Integer">
		select * from item_info where code = #{code}
	</select>
	<select id="selectCountOfBBS" resultType="Integer">
		select count(*) from bbs
	</select>
	<select id="selectCountOfItemInfo" resultType="Integer">
		select count(*) from item_info
	</select>
	<select id="selectCountPrevPageOfBBS" resultType="Integer" parameterType="Integer">
		select count(*) from bbs where seqno > #{seqno}
	</select>
	<select id="selectCountNextPageOfBBS" resultType="Integer" parameterType="Integer">
		select count(*) from
		(
			select seqno, rownum rn from
			(
				select * from bbs order by seqno desc
			)
		)
		where rn > ((#{page} - 1) * 5)
	</select>
	<select id="selectBBSNextPage" resultType="model.BBS" parameterType="Integer">
		select * from bbs where seqno <![CDATA[<]]> #{seqno} order by seqno desc
	</select>
	<select id="selectBBSPrevPage" resultType="model.BBS" parameterType="Integer">
		select * from
		(select seqno,title,content,id,bbs_date,rownum from 
			(select * from
				(select * from bbs where seqno > #{seqno} order by seqno desc
				)order by seqno
			)where rownum <![CDATA[<]]> = 5 order by seqno desc
		)
	</select>
	<select id="selectBBSPageNum" resultType="model.BBS" parameterType="Integer">
		select seqno,title,content,id,bbs_date from(
			select seqno,title,content,id,bbs_date,rownum rn from
			(select * from bbs order by seqno desc)
			)where (rn > ((#{page} - 1)* 5)) and (rn <![CDATA[<]]> ((#{page}-1)*5+6))
	</select>
	<select id="selectItemInfoNextPage" resultType="model.ItemInfo" parameterType="Integer">
		select * from item_info where code <![CDATA[<]]> #{code} order by code desc
	</select>
	<select id="selectItemInfoPrevPage" resultType="model.ItemInfo" parameterType="Integer">
		select * from
		(select code,name,price,origin,rownum from
			(select * from 
				(select * from item_info where code > #{code} order by code desc
				)order by code
			)where rownum <![CDATA[<]]>=5 order by code desc
		)
	</select>
	<select id="selectCountPrevPageOfItemInfo" resultType="Integer" parameterType="Integer">
		select count(*) from item_info where code > #{code}
	</select>
	<select id="selectItemInfoPageNum" resultType="model.ItemInfo" parameterType="Integer">
		select * from(
			select * from(
				select code,name,price,origin,rownum rn from(
					select * from item_info order by code desc
				)
			)where rn between ((#{page}*5)-5)+1 and #{page}*5 order by code desc
		)
	</select>
	<select id="selectCountNextPageOfItemInfo" resultType="Integer" parameterType="Integer">
		select count(*) from
		(
			select code, rownum rn from
			(
				select * from item_info order by code desc
			)
		) where rn > (#{page}-1)*5
	</select>
	<select id="selectMaxCartSeqno" resultType="Integer">
		select max(seqno) from cart
	</select>
	<insert id="insertIntoCart" parameterType="model.Cart">
		insert into cart values(#{seqno},#{code},#{num},#{id})
	</insert>
	<select id="selectNumByIdAndCode" resultType="Integer" parameterType="model.Cart">
		select num from cart where id = #{id} and code = #{code}
	</select>
	<update id="updateNumByIdAndCode" parameterType="model.Cart">
		update cart set num = #{num} where id = #{id} and code = #{code}
	</update>
	<select id="selectCartById" resultType="model.CartList" parameterType="String">
		select c.code,i.name,i.price,c.num,c.id
		from cart c,item_info i
		where c.code = i.code
		and c.id = #{id}
	</select>
	<update id="updateCartToNum" parameterType="model.Cart">
		update cart set num = #{num} where code = #{code} and id = #{id}
	</update>
	<delete id="deleteCartByIdAndCode" parameterType="model.Cart">
		delete from cart where id = #{id} and code = #{code}
	</delete>
	<insert id="insertIntoImageWriting" parameterType="model.ImageWriting">
		insert into image_writing values(
			#{writing_id},#{group_id},#{order_no},#{parent_id},#{register_date},
			#{writer_name},#{email},#{image_name},#{password},#{title},#{content}
		)
	</insert>
	<select id="selectMaxWritingId" resultType="Integer">
		select max(writing_id) from image_writing
	</select>
	<select id="selectCountImageWriting" resultType="Integer">
		select count(*) from image_writing
	</select>
	<select id="selectImageWritingByCondition" resultType="model.ImageWriting" parameterType="model.Condition">
		select * from
		(
			select a.*, rownum rn from
			(
				 select * from image_writing
				 order by group_id desc,
				 order_no asc
			)a
		)
		where rn between #{startRow} and #{endRow}
	</select>
	<select id="selectImageWritingById" resultType="model.ImageWriting" parameterType="Integer">
		select * from image_writing where writing_id = #{writing_id}
	</select>
	<delete id="deleteImageWritingById" parameterType="Integer">
		delete from image_writing where writing_id = #{writing_id}
	</delete>
	<update id="updateImageWritingById" parameterType="model.ImageWriting">
		update image_writing set title=#{title},writer_name=#{writer_name},email=#{email},content=#{content},image_name=#{image_name} where writing_id=#{writing_id}
	</update>
	<select id="selectMaxGroupId" resultType="Integer">
		select max(group_id) from image_writing
	</select>
	<update id="updateOrderNo" parameterType="model.ImageWriting">
		update image_writing set order_no = order_no + 1 
		where group_id = #{group_id}
		and order_no >= #{order_no}
	</update>
	<select id="selectIdForCheck" parameterType="String" resultType="String">
		select mem_id from member where mem_id = #{mem_id}
	</select>
</mapper>








